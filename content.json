{"meta":{"title":"Liangshou","subtitle":"","description":"","author":"Liangshou","url":"http://example.com","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2023-10-15T06:26:40.586Z","updated":"2022-03-21T07:18:46.000Z","comments":false,"path":"/404.html","permalink":"http://example.com/404.html","excerpt":"","text":""},{"title":"书单","date":"2023-10-15T06:26:40.586Z","updated":"2022-03-21T07:18:46.000Z","comments":false,"path":"books/index.html","permalink":"http://example.com/books/index.html","excerpt":"","text":""},{"title":"about","date":"2023-10-15T08:26:48.000Z","updated":"2023-10-15T08:26:48.224Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2023-10-15T06:26:40.586Z","updated":"2022-03-21T07:18:46.000Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"分类","date":"2023-10-15T08:28:18.437Z","updated":"2022-03-21T07:18:46.000Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2023-10-15T06:26:40.586Z","updated":"2022-03-21T07:18:46.000Z","comments":false,"path":"repository/index.html","permalink":"http://example.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2023-10-15T06:26:40.586Z","updated":"2022-03-21T07:18:46.000Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2023-10-14T16:08:56.164Z","updated":"2023-10-14T16:04:19.185Z","comments":true,"path":"2023/10/15/hello-world/","link":"","permalink":"http://example.com/2023/10/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"搭建GitHub Page-Jekyll篇","slug":"搭建GitHub主页-jekyll篇","date":"2023-10-13T09:25:37.729Z","updated":"2023-10-15T09:13:37.404Z","comments":true,"path":"2023/10/13/搭建GitHub主页-jekyll篇/","link":"","permalink":"http://example.com/2023/10/13/%E6%90%AD%E5%BB%BAGitHub%E4%B8%BB%E9%A1%B5-jekyll%E7%AF%87/","excerpt":"","text":"一、概述 emoji 好看吗？这里 有很多哦 应该没有一个开发人员不向往有一个自己的个人网页吧？:smirk: 这个主页怎么搭建呢？事实上，网络上有很多将搭建个人博客网站的项目，这样当然是好的，可是似乎需要自己搞一台服务器啊？如果服务器过期了，网站是不是就404了呢？:thinking: 那能不能不用自己租服务器，快乐当白嫖怪呢？GitHub表示：宝宝，还没想起来我吗？:triumph::kissing_heart: 不会前端咋办？当然是本着将白嫖进行到底的原则啦！看这里:point_right: Jekyll 模板:point_left:。 二、Windows环境配置 Ruby (ruby -v) RubyGems (gem -v) Gcc &amp; make (gcc -v | g++ -v | make -v ) Git (git –version) 配置Gcc、make环境 参考： Gcc、g++安装； make安装。 安装 Ruby 和 Jekyll 参考 Jekyll 官方环境配置指南 。 通过 RubyInstaller 安装Windows上安装Ruby和Jekyll最简单的方法是 RubyInstaller，RubyInstaller是一个基于windows的比较完备的安装程序，包括Ruby语言、执行环境、重要文档等等。 官方配置中介绍的是 RubyInstaller-2.4及更新版本，直接选择最新的安装包。 详细步骤： 从 RubyInstaller Downloads 下载并安装 Ruby+Devkit 版本。使用默认选项进行安装； 在安装向导的最后阶段运行 ridk install 步骤。这是安装带有本地扩展的 gem 所需要的。可以在 RubyInstaller Documentation 中找到更多相关信息。从选项中选择 MSYS2 and MINGW development tool chain ； 从开始菜单打开一个新的命令提示窗口，这样对 PATH 环境变量的更改就会生效。使用命令 gem Install Jekyll Bundler 安装Jekyll和Bundler； 注意：此处需将 Ruby gem的源换回国内源，清华镜像源操作方法。 查看Jekyll 是否正确安装：jekyll -v； RubyInstaller Downloads页面 安装向导完成页面 运行 ridk install ridk install 运行完成 检查Jekyll是否成功安装 通过bash安装 参考 Jekyll 官方环境配置指南 ，此处不再尝试 三、配置个人主页根据自己选择的 Jekyll 模板，进行后续配置。以 Chirpy 模板为例。 1. 创建仓库 + 准备模板源码首先创建名为 username.github.io 的远程仓库，并clone到本地。 :warning: username不是你的昵称 or 你自己的名字。 :heavy_check_mark: username是你的github账户名，要严格保持一致 下载 Chripy 的源码，解压到clone的本地文件夹目录下，使用 bundle install 构建本地环境。 :warning: 记住将 Gemfile 中的 source 替换为 清华镜像源。 2. 部署个人主页修改配置文件部署前，配置 _config.yml 中的 url，填写为仓库地址。 Before the deployment begins, check out the file_config.ymland make sure theurlis configured correctly. Furthermore, if you prefer the project site and don’t use a custom domain, or you want to visit your website with a base URL on a web server other thanGitHub Pages, remember to change thebaseurlto your project name that starts with a slash, e.g,/project-name. 使用Github Action部署个人主页。 首先在仓库设置页(Settings)-&gt;Pages-&gt;Build and deployment从下拉菜单中选择Github Actions。 Browse to your repository on GitHub. Select the tab Settings, then click Pages in the left navigation bar. Then, in the Source section (under Build and deployment), select GitHub Actions from the dropdown menu. 然后把本地修改commit并提交到Github远程仓库上，可以触发Github Action的Build and deployment工作流进行部署。如果没有自动触发，可以手动点击Build and Deploy进行部署。 Push any commits to GitHub to trigger the Actions workflow. In the Actions tab of your repository, you should see the workflow Build and Deploy running. Once the build is complete and successful, the site will be deployed automatically. 等待一段时间后，在 Actions 页查看部署情况。 可能的错误 (可选)手动构建和配置 不再演示，可参考 官方文档。 本地运行Jekyll项目在项目路径下使用命令 bundle exec jekyll serve，即可在 Web 浏览器中导航到 http://localhost:4000 浏览本地项目。 参考文章 知乎-春枫禾旭 的博客； GitHub Page中文教程； Jekyll 模板主页； Jekyll 官方环境配置指南； Chirpy官方文档 ； emoji小基地","categories":[{"name":"GitHub","slug":"GitHub","permalink":"http://example.com/categories/GitHub/"}],"tags":[{"name":"Github","slug":"Github","permalink":"http://example.com/tags/Github/"},{"name":"HTML","slug":"HTML","permalink":"http://example.com/tags/HTML/"}]}],"categories":[{"name":"GitHub","slug":"GitHub","permalink":"http://example.com/categories/GitHub/"}],"tags":[{"name":"Github","slug":"Github","permalink":"http://example.com/tags/Github/"},{"name":"HTML","slug":"HTML","permalink":"http://example.com/tags/HTML/"}]}